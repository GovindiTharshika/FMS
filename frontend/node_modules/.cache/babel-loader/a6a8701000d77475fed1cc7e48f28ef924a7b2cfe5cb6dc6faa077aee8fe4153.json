{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FMS\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport UpdatesPage from './components/UpdatesPage'; // Renamed from PatchManager\nimport ServerManagementPage from './components/ServerManagementPage'; // Import the new page\nimport ScanningPage from './components/ScanningPage'; // Import the new ScanningPage\nimport './index.css'; // Ensure Tailwind styles are imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activePage, setActivePage] = useState('dashboard'); // For sidebar highlight\n  const [currentPage, setCurrentPage] = useState('dashboard'); // For displayed content\n\n  const handleNavigate = pageId => {\n    setCurrentPage(pageId); // Always update displayed content\n    if (pageId !== 'scanning') {\n      setActivePage(pageId); // Only update sidebar highlight if not scanning\n    }\n  };\n  let CurrentPage;\n  switch (currentPage) {\n    case 'dashboard':\n      CurrentPage = Dashboard;\n      break;\n    case 'updates':\n      // This corresponds to the old \"Deployment\" page\n      CurrentPage = UpdatesPage;\n      break;\n    case 'deployment':\n      // Added case for Deployment\n      CurrentPage = UpdatesPage; // It will render the same page as Updates\n      break;\n    case 'servers':\n      // Added case for Servers\n      CurrentPage = ServerManagementPage;\n      break;\n    case 'scanning':\n      // Added case for Scanning\n      CurrentPage = ScanningPage;\n      break;\n    // Add cases for 'history', 'settings' when those pages are built\n    default:\n      CurrentPage = Dashboard;\n    // Fallback to dashboard\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activePage: activePage,\n      onNavigate: handleNavigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J5MJ2e5D4dnbSMwe9UntOPWzyvQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","Header","Dashboard","UpdatesPage","ServerManagementPage","ScanningPage","jsxDEV","_jsxDEV","App","_s","activePage","setActivePage","currentPage","setCurrentPage","handleNavigate","pageId","CurrentPage","className","children","onNavigate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/FMS/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport Header from './components/Header';\r\nimport Dashboard from './components/Dashboard';\r\nimport UpdatesPage from './components/UpdatesPage'; // Renamed from PatchManager\r\nimport ServerManagementPage from './components/ServerManagementPage'; // Import the new page\r\nimport ScanningPage from './components/ScanningPage'; // Import the new ScanningPage\r\nimport './index.css'; // Ensure Tailwind styles are imported\r\n\r\nfunction App() {\r\n  const [activePage, setActivePage] = useState('dashboard'); // For sidebar highlight\r\n  const [currentPage, setCurrentPage] = useState('dashboard'); // For displayed content\r\n\r\n  const handleNavigate = (pageId) => {\r\n    setCurrentPage(pageId); // Always update displayed content\r\n    if (pageId !== 'scanning') {\r\n      setActivePage(pageId); // Only update sidebar highlight if not scanning\r\n    }\r\n  };\r\n\r\n  let CurrentPage;\r\n  switch (currentPage) {\r\n    case 'dashboard':\r\n      CurrentPage = Dashboard;\r\n      break;\r\n    case 'updates': // This corresponds to the old \"Deployment\" page\r\n      CurrentPage = UpdatesPage;\r\n      break;\r\n    case 'deployment': // Added case for Deployment\r\n      CurrentPage = UpdatesPage; // It will render the same page as Updates\r\n      break;\r\n    case 'servers': // Added case for Servers\r\n      CurrentPage = ServerManagementPage;\r\n      break;\r\n    case 'scanning': // Added case for Scanning\r\n      CurrentPage = ScanningPage;\r\n      break;\r\n    // Add cases for 'history', 'settings' when those pages are built\r\n    default:\r\n      CurrentPage = Dashboard; // Fallback to dashboard\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <Sidebar activePage={activePage} onNavigate={handleNavigate} />\r\n      <div className=\"flex-1 flex flex-col overflow-y-auto\">\r\n        <Header />\r\n        <CurrentPage /> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAOC,oBAAoB,MAAM,mCAAmC,CAAC,CAAC;AACtE,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AACtD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;;EAE7D,MAAMe,cAAc,GAAIC,MAAM,IAAK;IACjCF,cAAc,CAACE,MAAM,CAAC,CAAC,CAAC;IACxB,IAAIA,MAAM,KAAK,UAAU,EAAE;MACzBJ,aAAa,CAACI,MAAM,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,IAAIC,WAAW;EACf,QAAQJ,WAAW;IACjB,KAAK,WAAW;MACdI,WAAW,GAAGd,SAAS;MACvB;IACF,KAAK,SAAS;MAAE;MACdc,WAAW,GAAGb,WAAW;MACzB;IACF,KAAK,YAAY;MAAE;MACjBa,WAAW,GAAGb,WAAW,CAAC,CAAC;MAC3B;IACF,KAAK,SAAS;MAAE;MACda,WAAW,GAAGZ,oBAAoB;MAClC;IACF,KAAK,UAAU;MAAE;MACfY,WAAW,GAAGX,YAAY;MAC1B;IACF;IACA;MACEW,WAAW,GAAGd,SAAS;IAAE;EAC7B;EAEA,oBACEK,OAAA;IAAKU,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCX,OAAA,CAACP,OAAO;MAACU,UAAU,EAAEA,UAAW;MAACS,UAAU,EAAEL;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DhB,OAAA;MAAKU,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBACnDX,OAAA,CAACN,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVhB,OAAA,CAACS,WAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA1CQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}