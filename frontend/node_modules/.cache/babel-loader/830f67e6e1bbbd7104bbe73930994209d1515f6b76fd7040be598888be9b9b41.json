{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev web\\\\patch management system\\\\FMS\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DashboardOverview from './DashboardOverview';\nimport PatchCompliance from './PatchCompliance';\nimport RecentActivity from './RecentActivity';\nimport axios from 'axios'; // Make sure axios is installed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [overviewStats, setOverviewStats] = useState({\n    totalServers: 0,\n    pendingUpdates: 0,\n    lastUpdate: 'Loading...'\n  });\n  useEffect(() => {\n    const fetchServerCount = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/servers/count');\n        setOverviewStats(prev => ({\n          ...prev,\n          totalServers: response.data.total\n        }));\n      } catch (error) {\n        console.error('Failed to fetch server count:', error);\n      }\n    };\n    fetchServerCount();\n  }, []);\n  const recentActivitiesData = [{\n    id: 1,\n    type: 'patch_applied',\n    text: 'Patch applied to Server1',\n    time: '10:00 AM'\n  }, {\n    id: 2,\n    type: 'scan_triggered',\n    text: 'Scan triggered for Group: Production',\n    time: '9:30 AM'\n  }, {\n    id: 3,\n    type: 'patch_applied',\n    text: 'Security update KB12345 applied to Server2',\n    time: 'Yesterday'\n  }, {\n    id: 4,\n    type: 'scan_triggered',\n    text: 'Scan completed for Group: Staging',\n    time: '2 days ago'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 flex-grow\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardOverview, {\n      stats: overviewStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:w-2/3\",\n        children: /*#__PURE__*/_jsxDEV(PatchCompliance, {\n          appliedPercentage: patchComplianceData.appliedPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:w-1/3\",\n        children: /*#__PURE__*/_jsxDEV(RecentActivity, {\n          activities: recentActivitiesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jR63Sdk8jewJX5lazbzb7jpdc20=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","DashboardOverview","PatchCompliance","RecentActivity","axios","jsxDEV","_jsxDEV","Dashboard","_s","overviewStats","setOverviewStats","totalServers","pendingUpdates","lastUpdate","fetchServerCount","response","get","prev","data","total","error","console","recentActivitiesData","id","type","text","time","className","children","stats","fileName","_jsxFileName","lineNumber","columnNumber","appliedPercentage","patchComplianceData","activities","_c","$RefreshReg$"],"sources":["D:/Dev web/patch management system/FMS/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport DashboardOverview from './DashboardOverview';\r\nimport PatchCompliance from './PatchCompliance';\r\nimport RecentActivity from './RecentActivity';\r\nimport axios from 'axios'; // Make sure axios is installed\r\n\r\nconst Dashboard = () => {\r\n  const [overviewStats, setOverviewStats] = useState({\r\n    totalServers: 0,\r\n    pendingUpdates: 0,\r\n    lastUpdate: 'Loading...',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchServerCount = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/servers/count');\r\n        setOverviewStats((prev) => ({\r\n          ...prev,\r\n          totalServers: response.data.total,\r\n        }));\r\n      } catch (error) {\r\n        console.error('Failed to fetch server count:', error);\r\n      }\r\n    };\r\n\r\n    fetchServerCount();\r\n  }, []);\r\n\r\n  const recentActivitiesData = [\r\n    { id: 1, type: 'patch_applied', text: 'Patch applied to Server1', time: '10:00 AM' },\r\n    { id: 2, type: 'scan_triggered', text: 'Scan triggered for Group: Production', time: '9:30 AM' },\r\n    { id: 3, type: 'patch_applied', text: 'Security update KB12345 applied to Server2', time: 'Yesterday' },\r\n    { id: 4, type: 'scan_triggered', text: 'Scan completed for Group: Staging', time: '2 days ago' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 flex-grow\">\r\n      <DashboardOverview stats={overviewStats} />\r\n      <div className=\"flex flex-col lg:flex-row gap-6\">\r\n        <div className=\"lg:w-2/3\">\r\n          <PatchCompliance appliedPercentage={patchComplianceData.appliedPercentage} />\r\n        </div>\r\n        <div className=\"lg:w-1/3\">\r\n          <RecentActivity activities={recentActivitiesData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}