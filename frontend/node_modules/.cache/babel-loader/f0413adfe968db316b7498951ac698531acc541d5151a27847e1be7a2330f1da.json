{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev web\\\\patch management system\\\\FMS\\\\frontend\\\\src\\\\components\\\\ServerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerList = () => {\n  _s();\n  // Sample server data - in a real app, this would come from an API\n  const [servers, setServers] = useState([{\n    id: '1',\n    hostname: 'server-prod-01',\n    ipAddress: '192.168.1.100',\n    os: 'Linux',\n    status: 'online',\n    lastPatchDate: 'May 14, 2025'\n  }, {\n    id: '2',\n    hostname: 'server-prod-02',\n    ipAddress: '192.168.1.101',\n    os: 'Windows',\n    status: 'offline',\n    lastPatchDate: 'May 13, 2025'\n  }, {\n    id: '3',\n    hostname: 'server-test-01',\n    ipAddress: '192.168.1.102',\n    os: 'Linux',\n    status: 'online',\n    lastPatchDate: 'May 14, 2025'\n  }\n  // Add more servers as needed\n  ]);\n  const [filter, setFilter] = useState('All Servers');\n  const filteredServers = servers.filter(server => {\n    if (filter === 'All Servers') return true;\n    // Add more sophisticated filtering logic if needed based on status, OS, etc.\n    return server.os === filter; // Simple filter by OS for now if not \"All Servers\"\n  });\n  const StatusIndicator = ({\n    status\n  }) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-block w-3 h-3 rounded-full ${status === 'online' ? 'bg-green-500' : 'bg-gray-400'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-700\",\n        children: \"Server List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        className: \"border border-gray-300 rounded-md p-2 text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All Servers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Linux\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Windows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Hostname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"IP Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"OS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Last Patch Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"bg-white divide-y divide-gray-200\",\n          children: [filteredServers.map(server => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\",\n              children: server.hostname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n              children: server.ipAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n              children: server.os\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n              children: /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                status: server.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n              children: server.lastPatchDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, server.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)), filteredServers.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              className: \"px-6 py-4 text-center text-sm text-gray-500\",\n              children: \"No servers found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerList, \"pqIdG10x0KlGPo094h4VDl+6Yfk=\");\n_c = ServerList;\nexport default ServerList;\nvar _c;\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ServerList","_s","servers","setServers","id","hostname","ipAddress","os","status","lastPatchDate","filter","setFilter","filteredServers","server","StatusIndicator","className","fileName","_jsxFileName","lineNumber","columnNumber","children","value","onChange","e","target","scope","map","length","colSpan","_c","$RefreshReg$"],"sources":["D:/Dev web/patch management system/FMS/frontend/src/components/ServerList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ServerList = () => {\r\n  // Sample server data - in a real app, this would come from an API\r\n  const [servers, setServers] = useState([\r\n    { id: '1', hostname: 'server-prod-01', ipAddress: '192.168.1.100', os: 'Linux', status: 'online', lastPatchDate: 'May 14, 2025' },\r\n    { id: '2', hostname: 'server-prod-02', ipAddress: '192.168.1.101', os: 'Windows', status: 'offline', lastPatchDate: 'May 13, 2025' },\r\n    { id: '3', hostname: 'server-test-01', ipAddress: '192.168.1.102', os: 'Linux', status: 'online', lastPatchDate: 'May 14, 2025' },\r\n    // Add more servers as needed\r\n  ]);\r\n\r\n  const [filter, setFilter] = useState('All Servers');\r\n\r\n  const filteredServers = servers.filter(server => {\r\n    if (filter === 'All Servers') return true;\r\n    // Add more sophisticated filtering logic if needed based on status, OS, etc.\r\n    return server.os === filter; // Simple filter by OS for now if not \"All Servers\"\r\n  });\r\n\r\n  const StatusIndicator = ({ status }) => (\r\n    <span className={`inline-block w-3 h-3 rounded-full ${status === 'online' ? 'bg-green-500' : 'bg-gray-400'}`}></span>\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"text-xl font-semibold text-gray-700\">Server List</h3>\r\n        <select \r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n          className=\"border border-gray-300 rounded-md p-2 text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\r\n        >\r\n          <option>All Servers</option>\r\n          <option>Linux</option>\r\n          <option>Windows</option>\r\n          {/* Add other filter options as needed */}\r\n        </select>\r\n      </div>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Hostname</th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">IP Address</th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">OS</th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Patch Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {filteredServers.map((server) => (\r\n              <tr key={server.id} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{server.hostname}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{server.ipAddress}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{server.os}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  <StatusIndicator status={server.status} />\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{server.lastPatchDate}</td>\r\n              </tr>\r\n            ))}\r\n            {filteredServers.length === 0 && (\r\n              <tr>\r\n                <td colSpan=\"5\" className=\"px-6 py-4 text-center text-sm text-gray-500\">No servers found.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}